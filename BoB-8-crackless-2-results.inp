/COM,===========================================================================
/COM,MODEL WITHOUT A CRACK SOLUTION
/COM,===========================================================================

/POST1

*SET,retrieve_displacement,true
*SET,retrieve_energy,true
*SET,retrieve_surface_stress,false
*SET,retrieve_field_stress,true

/COM,---------------------------------------------------------------------------
/COM,DISPLACEMENT
/COM,---------------------------------------------------------------------------

*IF,retrieve_displacement,EQ,true,THEN

! Displacement towards the contact point
RSYS,cs_ball_lower
*GET,displacement_crackless_lower,NODE,loaded_node_lower,U,X

*IF,simulate_two_balls,EQ,true,THEN
	RSYS,cs_ball_upper
	*GET,displacement_crackless_upper,NODE,loaded_node_upper,U,X
*ELSE
	*SET,displacement_crackless_upper,displacement_crackless_lower
*ENDIF

*ENDIF

/COM,---------------------------------------------------------------------------
/COM,STRAIN ENERGY
/COM,---------------------------------------------------------------------------

*IF,retrieve_energy,EQ,true,THEN

! Select elements of the ball
CMSEL,S,area_ball_lower,AREA
ESLA,S $ ESEL,R,TYPE,,element_structural
! Erase element table and fill it with the strain energy
ETABLE,ERAS $ ETABLE,energy,SENE
! Sum all element table variables
SSUM
! Set sum of strain energy over all elements
*GET,energy_crackless_lower,SSUM,0,ITEM,energy

*IF,simulate_two_balls,EQ,false,THEN
	! Second ball was not simulated
	*SET,energy_crackless_upper,0
*ELSE
	! Select elements of the ball
	CMSEL,S,area_ball_upper,AREA
	ESLA,S $ ESEL,R,TYPE,,element_structural
	! Erase element table and fill it with the strain energy
	ETABLE,ERAS $ ETABLE,energy,SENE
	! Sum all element table variables
	SSUM
	! Set sum of strain energy over all elements
	*GET,energy_crackless_upper,SSUM,0,ITEM,energy
*ENDIF

*SET,energy_crackless_total,energy_crackless_lower+energy_crackless_upper

*ENDIF

/COM,---------------------------------------------------------------------------
/COM,RETRIEVE RESULTS ON THE SURFACE
/COM,---------------------------------------------------------------------------

*IF,retrieve_surface_stress,EQ,true,THEN

! Select nodes on the surface
CSYS,cs_ball_lower
ESEL,S,TYPE,,element_structural
NSLE,S,CORNER
NSEL,R,LOC,X,ball_radius_lower,ball_radius_lower
*GET,selected_nodes_count,NODE,,COUNT

*DEL,node_list,,NOPR
*VLEN,selected_nodes_count
*VGET,node_list,NODE,,NLIST

! Retrieve results for selected nodes
*DEL,stresses_surface_lower,,NOPR
*DIM,stresses_surface_lower,ARRAY,selected_nodes_count,13
*DO,n,1,selected_nodes_count
	! Angle of node
	RSYS,cs_ball_lower
	*GET,stresses_surface_lower(n,1),NODE,node_list(n),LOC,Y
	! Stresses in spherical
	*GET,stresses_surface_lower(n,2),NODE,node_list(n),S,X
	*GET,stresses_surface_lower(n,3),NODE,node_list(n),S,Y
	*GET,stresses_surface_lower(n,4),NODE,node_list(n),S,Z
	! Stresses in cylindrical
	RSYS,1
	*GET,stresses_surface_lower(n,5),NODE,node_list(n),S,X
	*GET,stresses_surface_lower(n,6),NODE,node_list(n),S,Y
	*GET,stresses_surface_lower(n,7),NODE,node_list(n),S,Z
	! Principal stresses
	*GET,stresses_surface_lower(n,8),NODE,node_list(n),S,1
	*GET,stresses_surface_lower(n,9),NODE,node_list(n),S,2
	*GET,stresses_surface_lower(n,10),NODE,node_list(n),S,3
	! Principal strains
	*GET,stresses_surface_lower(n,11),NODE,node_list(n),S,1
	*GET,stresses_surface_lower(n,12),NODE,node_list(n),S,2
	*GET,stresses_surface_lower(n,13),NODE,node_list(n),S,3
*ENDDO
! Sort by angle
*DEL,void,,NOPR $ *MOPER,void,stresses_surface_lower,SORT,,1

*ENDIF

/COM,---------------------------------------------------------------------------
/COM,PLOT STRESS FIELD
/COM,---------------------------------------------------------------------------

/POST1

! Select surface nodes
CSYS,cs_ball_lower
NSEL,S,LOC,X,0,ball_radius_upper
NSEL,R,LOC,Y,0,2*contact_angle_upper
! Sort selected nodes by tangential stress
RSYS,cs_ball_lower
NSORT,S,Y
! Get maximal and minimal tangential stress
*GET,minimal_stress,SORT,,MIN
*GET,maximal_stress,SORT,,MAX
! Get numbers of nodes an maximal and minimal stress locations
*GET,minimal_stress_node,SORT,,IMIN
*GET,maximal_stress_node,SORT,,IMAX
! Select everything
NSEL,ALL
! Change range of plotted values
*SET,absolute_maximum,MAX(ABS(minimal_stress),ABS(maximal_stress))
/CONTOUR,ALL,10,-absolute_maximum,,absolute_maximum
! Plot stress field
PLESOL,S,Y

/COM,---------------------------------------------------------------------------
/COM,PLOT PATH SURFACE
/COM,---------------------------------------------------------------------------

/POST1

! Select structural elements of the ball
ESEL,S,TYPE,,element_structural $ NSLE,S,1
! Calculate path division
*SET,path_division,NINT((contact_arc_length_lower)/(micrometer/4))
! Initialize new path
PATH,path_surface,2,16,path_division
! Define path
CSYS,cs_ball_lower
PPATH,1,node(ball_radius_lower,0,0),,,,cs_ball_lower
PPATH,2,node(ball_radius_lower,contact_angle_lower*4,0),,,,cs_ball_lower

! Map onto path
PDEF,S1,S,1
PDEF,S2,S,2
PDEF,S3,S,3
RSYS,cs_ball_lower
PDEF,Snorm,S,X
PDEF,Stang,S,Y
PDEF,Shoop,S,Z
PDEF,Enorm,EPEL,X
PDEF,Etang,EPEL,Y
PDEF,Ehoop,EPEL,Z
RSYS,1
PDEF,Srad,S,X
PDEF,Saxi,S,Y
PDEF,Stan,S,Z

! Plot paths
/TITLE,Path on the lower ball surface
/AXLAB,X,Surface path [um]
/AXLAB,Y,Stress component [MPa]
! /XRANGE,contact_radius*0.95,2*contact_radius*1.05
! /YRANGE,-stress_maximum*2,+stress_maximum*2
PLPATH,Stang,Snorm,Shoop,Srad,Saxi,Stan

! Save current path into an array
PAGET,path_surface,TABLE
ALLSEL,ALL

/COM,---------------------------------------------------------------------------
/COM,PLOT PATH CRACK
/COM,---------------------------------------------------------------------------

*IF,simulate_cracks,EQ,true,THEN

/POST1
CSYS,cs_ball_lower
! Select structural elements of the ball
ESEL,S,TYPE,,element_structural $ NSLE,S,1
! Calculate path division
*SET,path_length,ball_radius_lower*0.05
*SET,path_division,NINT(path_length/(micrometer/10))
! Initialize new path
PATH,path_in_depth,2,10,path_division
! Define path
CSYS,cs_ball_lower
PPATH,1,node(ball_radius_lower,crack_angle_lower,0)
PPATH,2,node(ball_radius_lower-path_length,crack_angle_lower,0)

! Map onto path
RSYS,cs_ball_lower
PDEF,Snorm,S,X
PDEF,Stang,S,Y
PDEF,Shoop,S,Z
PDEF,S1,S,1
PDEF,S2,S,2
PDEF,S3,S,3

! Plot paths
/TITLE,Path along the crack
/AXLAB,X,Crack path [um]
/AXLAB,Y,Stress component [MPa]
! /XRANGE,0,10*micrometer
! /YRANGE,-stress_maximum,+stress_maximum
PLPATH,Stang,Snorm,Shoop

! Save current path into an array
PAGET,path_crack,TABLE
ALLSEL,ALL

*ENDIF
